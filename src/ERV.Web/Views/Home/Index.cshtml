@model IPagedList<CountryInfoDTO>
@{
    ViewData["Title"] = "Home Page";

    var toHeader = new TopHeaderDTO()
    {
        AdditionalText = "Countries",
        Image = "images/top/continent.jpg",
        BreadCrumb = new List<BreadCrumbDTO>()
        {
            new BreadCrumbDTO()
            {
                Action = string.Empty,
                Text = Lang("_Home"),
                Order = 1,
            }
        }
    };
}

@await Html.PartialAsync("~/Views/Shared/Partials/_Top.cshtml", toHeader)

<section class="border-bottom mt-2">
    <div class="container">
        @if (Model.ToList() != null && Model.Count > 0)
        {
            <div class="row mb-1 align-items-center header-text mb-3">
                <div class="col-lg-6 col-sm-6">
                    <h3 class="font-weight-bold heading">
                        Country List
                    </h3>
                </div>
                <div class="col-lg-6 col-sm-6 text-lg-end">
                    <p>
                        <a asp-controller="Country" asp-action="Index" class="btn btn-light btn-sm fw-bold text-primary">View All Countries</a>
                    </p>
                </div>
            </div>
            <div class="row gx-5 justify-content-between content-row">
                @foreach (var item in Model)
                {
                    var addClass = Model.ToList().IndexOf(item) % 3 != 0 ? "mb-lg-0" : "";

                    <div class="col-sm-6 col-lg-4 mb-3 @addClass">
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="feature text-white rounded-3">
                                    <img class="img-fluid rounded mx-auto d-block" src="@item.Flag" />
                                </div>
                            </div>
                            <div class="col-sm-8">
                                <h5 class="fw-bolder mt-3">@item.Name</h5>
                            </div>
                            <div class="col-sm-12">
                                <ul class="country-info">
                                    @if (!string.IsNullOrWhiteSpace(item.Region))
                                    {
                                        <li><span>Region: </span>  <a class="btn btn-link text-decoration-none" asp-controller="Country" asp-action="Region" asp-route-name="@item.Region">@item.Region</a></li>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(item.SubRegion))
                                    {
                                        <li><span>SubRegion: </span> <a class="btn btn-link text-decoration-none" asp-controller="Country" asp-action="SubRegion" asp-route-region="@item.Region">@item.SubRegion</a></li>
                                    }
                                    <li class="mt-1">
                                        <a class="text-decoration-none text-center" asp-controller="Country" asp-action="Country" asp-route-code="@item.Code">
                                            View country Info
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-sm-12 mt-2 d-flex justify-content-center">
                    @Html.PagedListPager(Model, page => Url.Action("Index", "Home",
                new { page = page }),
                new PagedListRenderOptions {
                    ActiveLiElementClass = "active",
                    PageClasses = new[]{ "page-link"},
                    LiElementClasses=new[] { "page-item" },
                    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
                    LinkToNextPageFormat = "Next",
                    LinkToPreviousPageFormat = "Prev",
                    MaximumPageNumbersToDisplay = 3,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always
                })
                </div>
            </div>
        }
    </div>
</section>